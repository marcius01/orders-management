##AUTH
mp.jwt.verify.publickey.location=publicKey.pem
quarkus.native.resources.includes=publicKey.pem
#quarkus.http.auth.permission.default.paths=/*
#quarkus.http.auth.permission.default.policy=authenticated

##HTTP
quarkus.http.port=8083
##DB
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=hibernate
quarkus.datasource.password=hibernate
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.database.generation.create-schemas=true
quarkus.hibernate-orm.schema-management.strategy=validate
#quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:25432/ms-products
##DB-DEVSERVICE
quarkus.datasource.devservices.port=45432
quarkus.datasource.devservices.db-name=default
quarkus.datasource.devservices.enabled=true
quarkus.datasource.devservices.reuse=true
quarkus.datasource.devservices.volumes."/Users/Shared/Temp/lavori_personali/orders_management/volumes/payments/data"=/var/lib/postgresql/data
quarkus.datasource.devservices.image-name=postgres:14

##KAFKA
mp.messaging.incoming.in-stock-request.connector=smallrye-kafka
kafka.bootstrap.servers=localhost:9092
##Incoming
#mp.messaging.incoming.in-request.topic=[ms-name.topic-name]
#mp.messaging.incoming.in-request.value.deserializer=tech.skullprogrammer.products.messaging.[EventClass]EventDeserializer
##Outcoming Failure
mp.messaging.outgoing.out-payment-failure.topic=payments.payment-failure
mp.messaging.outgoing.out-payment-failure.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
##Outcoming Success
mp.messaging.outgoing.out-payment-success.topic=payments.payment-success
mp.messaging.outgoing.out-payment-success.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
##LOGGING
quarkus.log.category."tech.skullprogrammer".level=DEBUG