##AUTH
mp.jwt.verify.publickey.location=publicKey.pem
quarkus.native.resources.includes=publicKey.pem
#quarkus.http.auth.permission.default.paths=/*
#quarkus.http.auth.permission.default.policy=authenticated

##HTTP
quarkus.http.port=8082
##DB
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=hibernate
quarkus.datasource.password=hibernate
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.database.generation.create-schemas=true
quarkus.hibernate-orm.schema-management.strategy=validate
#quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:25432/ms-orders
##DB-DEVSERVICE
quarkus.datasource.devservices.port=45432
quarkus.datasource.devservices.db-name=default
quarkus.datasource.devservices.enabled=true
quarkus.datasource.devservices.reuse=true
quarkus.datasource.devservices.volumes."/Users/Shared/Temp/lavori_personali/orders_management/volumes/orders/data"=/var/lib/postgresql/data
quarkus.datasource.devservices.image-name=postgres:14

##KAFKA
mp.messaging.incoming.orders-in.connector=smallrye-kafka
mp.messaging.incoming.in-reservation-success.connector=smallrye-kafka

kafka.bootstrap.servers=localhost:9092
##Incoming
mp.messaging.incoming.orders-in.topic=products.stock-reservation-failure
mp.messaging.incoming.orders-in.value.deserializer=tech.skullprogrammer.orders.messaging.consumer.StockAdjustmentFailedEventDeserializer
##Incoming
mp.messaging.incoming.in-reservation-success.topic=products.stock-reservation-success
mp.messaging.incoming.in-reservation-success.failure-strategy=dead-letter-queue
mp.messaging.incoming.in-reservation-success.dead-letter-queue.topic=products.dlq.stock-reservation-success
mp.messaging.incoming.in-reservation-success.value.deserializer=tech.skullprogrammer.orders.messaging.consumer.StockAdjustmentSuccessEventDeserializer
mp.messaging.incoming.in-reservation-success.dead-letter-queue.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.incoming.in-reservation-success.dead-letter-queue.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
##Outcoming
mp.messaging.outgoing.orders-out.topic=orders.initiated
mp.messaging.outgoing.orders-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
mp.messaging.outgoing.out-stock-reserved.topic=orders.stock-reserved
mp.messaging.outgoing.out-stock-reserved.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer

##LOGGING
quarkus.log.category."tech.skullprogrammer.orders".level=DEBUG